{"version":3,"sources":["components/features/navbar/Navbar.js","components/features/footer/Footer.js","components/features/pagination/PaginationPage.js","context/context.js","components/features/EpisodesList/EpisodesList.js","components/pages/Main.js","components/pages/Episode.js","components/utills/concatCharacterName.js","components/pages/Character.js","components/features/appRouter/AppRouter.js","components/features/container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","windowWidth","window","innerWidth","className","to","Footer","title","PaginationPage","setPage","style","background","color","Stack","spacing","Pagination","renderItem","item","page","PaginationItem","sx","changePage","count","variant","episodeContext","createContext","EpisodeProvider","Provider","EpisodesList","ListItem","ListItemText","primary","secondary","Typography","display","fontSize","component","episode_id","air_date","ListItemAvatar","Avatar","width","height","src","Divider","Main","useState","episodes","setEpisodes","useEffect","fetch","then","res","json","newArr","splice","spliceEpisodes","catch","e","console","log","value","map","Episode","favoriteEpisode","setFavoriteEpisode","characters","setCharacters","params","useParams","id","concatCharacterName","name","trim","replace","Character","favoriteCharacter","setFavoriteCharacter","characterName","character","img","alt","objectFit","nickname","status","birth","occupation","AppRouter","path","element","exact","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fde81b0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../../styles/style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\nexport const Navbar = () => {\r\n    const windowWidth = window.innerWidth;\r\n    return (\r\n        <ErrorBoundary>\r\n            <nav data-testid className=\"navbar-container\">\r\n                <h1>Lior App</h1>{\r\n                    windowWidth > 460 ? (\r\n                        <>\r\n                            <Link className=\"navbar-link\" to=\"/main\"> Main </Link>\r\n                            <Link className=\"navbar-link\" to=\"/episode/1\"> Episode </Link>\r\n                            <Link className=\"navbar-link\" to=\"/character\"> character </Link>\r\n                        </>) : <></>\r\n                }\r\n\r\n            </nav>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"../../styles/style.css\";\r\n\r\nexport const Footer = () => {\r\n\r\n    return (\r\n        <footer title=\"footer\" className=\"Footer-container\">\r\n            <div className=\"social-links\">\r\n                <ul className=\"social-links-list\">\r\n                    <li>Github</li>\r\n                    <li>Linkedin</li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { PaginationItem } from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport '../../styles/style.css';\r\n\r\nexport const PaginationPage = ({ setPage }) => {\r\n    const style = {\r\n        background: \"transparent\",\r\n        color: \"white\"\r\n    }\r\n    const windowWidth = window.innerWidth;\r\n\r\n    const changePage = (item) => {\r\n        setPage(item.page);\r\n        return < PaginationItem sx={style} {...item} />\r\n    }\r\n\r\n    return (\r\n        <div title=\"pagination-container\" className=\"pagination-container\">\r\n            <Stack spacing={2}>\r\n                <Pagination renderItem={(item) => changePage(item)} count={10} variant=\"text\">\r\n                </Pagination>\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext } from \"react\";\r\n\r\n// Episodes context for controlling the episodes all over the app\r\nconst episodeContext = createContext([]);\r\nexport const EpisodeProvider = episodeContext.Provider;\r\nexport const useEpisodeContext = () => useContext(episodeContext);\r\n\r\n\r\n","import ListItem from '@mui/material/ListItem';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const EpisodesList = ({ item }) => {\r\n    const windowWidth = window.innerWidth;\r\n\r\n    return (\r\n        <>\r\n            <ListItem data-testid=\"ListItem\">\r\n                <ListItemText\r\n                    primary=\"Episode\"\r\n                    secondary={\r\n                        <>\r\n                            <Typography\r\n                                sx={{ display: 'block', fontSize: \"1.3rem\" }}\r\n                                component=\"h3\"\r\n                                variant=\"div\"\r\n                            >\r\n\r\n                                <Link data-testid=\"link\" to={`/episode/${item.episode_id}`}>{item.title}</Link>\r\n\r\n\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                                sx={{ display: 'inline', fontSize: \"1.3rem\" }}\r\n                                component=\"h3\"\r\n                                variant=\"div\"\r\n                            >\r\n                                {item.air_date}\r\n\r\n                            </Typography>\r\n                        </>\r\n                    }\r\n                />\r\n                <ListItemAvatar className=\"img-container\" >\r\n                    <Avatar sx={{ display: windowWidth < 460 ? \"none\" : \"block\", width: \"70px\", height: \"70px\" }} src=\"https://upload.wikimedia.org/wikipedia/en/6/61/Breaking_Bad_title_card.png\" />\r\n                </ListItemAvatar>\r\n            </ListItem>\r\n\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport '../styles/style.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { PaginationPage } from '../features/pagination/PaginationPage';\r\nimport { EpisodeProvider } from '../../context/context';\r\nimport { EpisodesList } from '../features/EpisodesList/EpisodesList';\r\n\r\nexport const Main = () => {\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const spliceEpisodes = (episodes) => {\r\n        const newArr = episodes.splice((page - 2) * 7, 7);\r\n        setEpisodes(newArr);\r\n    }\r\n    useEffect(() => {\r\n        fetch(`https://www.breakingbadapi.com/api/episodes?season=1`)\r\n            .then(res => res.json())\r\n            .then(episodes => spliceEpisodes(episodes))\r\n            .catch(e => console.log(e))\r\n    }, [page])\r\n\r\n    return (\r\n        <EpisodeProvider value={{ episodes, setEpisodes }}>\r\n            <div data-testid=\"container\" className=\"users-list-container\" >\r\n                {episodes.map(item => <EpisodesList item={item} />)}\r\n            </div>\r\n            <PaginationPage setPage={setPage} />\r\n            <ToastContainer />\r\n        </EpisodeProvider>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport '../styles/style.css';\r\n\r\nexport const Episode = () => {\r\n    const [favoriteEpisode, setFavoriteEpisode] = useState({ title: \"Pilot\", air_date: \"01-20-2008\" });\r\n    const [characters, setCharacters] = useState([\"Walter White\", \"Jesse Pinkman\"]);\r\n    const params = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://www.breakingbadapi.com/api/episodes/${params.id}`)\r\n            .then(res => res.json())\r\n            .then(episodes => {\r\n                setFavoriteEpisode(episodes[0] || {});\r\n                setCharacters(favoriteEpisode.characters);\r\n            })\r\n            .catch(e => console.log(e))\r\n    }, [characters]);\r\n\r\n    return (\r\n\r\n        <div data-testid=\"episode\" className=\"episode-details-container\">\r\n            <div className=\"episode-descripition\">\r\n                {\r\n                    favoriteEpisode ?\r\n                        <>\r\n                            <h4 className=\"episode-header\">Episode title:</h4>\r\n                            <h1 className=\"episode-header\">{favoriteEpisode?.title}</h1>\r\n                            <p className=\"episode-info\">air_date:</p>\r\n\r\n                            <p className=\"episode-info\">{favoriteEpisode?.air_date}</p>\r\n                            <ul>\r\n                                {characters?.map(item => <Link to={`/character/${item}`}><li>{item}</li></Link>)}\r\n                            </ul>\r\n                        </>\r\n                        : \"No episode\"\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const concatCharacterName = (name = \"\") => {\r\n    name = name.trim().replace(\" \", \"+\");\r\n    return name;\r\n}\r\nconcatCharacterName(\" lior solomon \");","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/style.css';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport { concatCharacterName } from '../utills/concatCharacterName';\r\n\r\nexport const Character = () => {\r\n    const [favoriteCharacter, setFavoriteCharacter] = useState({});\r\n    const params = useParams();\r\n    const windowWidth = window.innerWidth;\r\n\r\n\r\n    useEffect(() => {\r\n        const characterName = concatCharacterName(params.name) || \"\";\r\n        fetch(`https://www.breakingbadapi.com/api/characters?name=${characterName}`)\r\n            .then(res => res.json())\r\n            .then(character => setFavoriteCharacter(character[0]))\r\n            .catch(e => console.log(e))\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"character-details-container\">\r\n            {\r\n                windowWidth > 460 && (\r\n                    <div className=\"character-image-container\">\r\n                        <img className=\"character-image\" src={favoriteCharacter ? favoriteCharacter.img : \"https://media.istockphoto.com/photos/iceberg-with-its-visible-and-underwater-or-submerged-parts-floating-picture-id1264160353?k=20&m=1264160353&s=612x612&w=0&h=aXfvgjOEvLekxZqIpbJByj80OLYx0esPjJ2jwyi-fUk=\"} alt=\"No Character found\" />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <div className=\"character-descripition\">\r\n                {windowWidth < 460 && (\r\n                    <ListItemAvatar >\r\n                        <Avatar sx={{ objectFit: \"fill\", width: \"150px\", height: \"150px\" }} src={favoriteCharacter.img} />\r\n                    </ListItemAvatar>\r\n                )}\r\n                <h1 className=\"character-header\">{favoriteCharacter?.name || \"Not found\"}</h1>\r\n                <h3 className=\"character-header\">{favoriteCharacter?.nickname || \"Not found\"}</h3>\r\n                <h3 className=\"character-header\">{favoriteCharacter?.status || \"Not found\"}</h3>\r\n                <p className=\"character-info\">{favoriteCharacter?.birth || \"Not found\"}</p>\r\n                <ul>\r\n                    {favoriteCharacter ? favoriteCharacter.occupation?.map(item => <li className=\"episode-links-list\">{item}</li>)\r\n                        :\r\n                        <li>No characters found</li>}\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../navbar/Navbar';\r\nimport '../../styles/style.css';\r\nimport { Footer } from '../footer/Footer';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes, Route\r\n} from \"react-router-dom\";\r\nimport { Main } from '../../pages/Main';\r\nimport { Episode } from '../../pages/Episode';\r\nimport { Character } from '../../pages/Character';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <Router>\r\n                <>\r\n                    <Navbar />\r\n                    <Routes>\r\n                        <Route path=\"/home-assignment-peer39\" element={<Main />} />\r\n                        <Route path=\"/main\" element={<Main />} />\r\n                        <Route path=\"/episode/:id\" exact element={<Episode />} />\r\n                        <Route path=\"/character/:name\" exact element={<Character />} />\r\n                    </Routes>\r\n                    <Footer />\r\n                </>\r\n            </Router >\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n","import '../../styles/style.css';\r\nimport { AppRouter } from '../appRouter/AppRouter';\r\n\r\n\r\nexport const Container = () => {\r\n\r\n    return (\r\n        <main className=\"light\">\r\n            <AppRouter />\r\n        </main >\r\n    )\r\n}\r\n","import './components/styles/style.css';\r\nimport { Container } from './components/features/container/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\nReactDOM.render(\r\n  <ErrorBoundary>\r\n    <App />\r\n  </ErrorBoundary>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}